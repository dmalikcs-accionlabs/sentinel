# Generated by Django 2.2.4 on 2020-06-02 12:25

import django.contrib.postgres.fields.hstore
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('collector', '0019_emailcollection_match_templates'),
    ]

    operations = [
        migrations.CreateModel(
            name='PDFCollection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('location', models.TextField(blank=True, null=True)),
                ('number_of_pages', models.PositiveIntegerField(null=True)),
                ('from_address', models.EmailField(max_length=254, verbose_name='FromAddress')),
                ('to_addresses', models.EmailField(max_length=254, verbose_name='ToAddresses')),
                ('client_id', models.IntegerField(verbose_name='ClientId')),
                ('type_id', models.IntegerField(verbose_name='TypeId')),
                ('is_published', models.BooleanField(default=False, editable=False)),
                ('template_match_status', models.CharField(choices=[('NEW', 'New'), ('MULTIPLE_MATCH', 'Multiple template match found'), ('NOT_MATCH', 'No template match found'), ('MATCH_FOUND', 'Template matched')], default='NEW', max_length=15)),
            ],
            options={
                'verbose_name': 'pdf',
                'verbose_name_plural': 'pdfs',
                'ordering': ('-created_at',),
            },
        ),
        migrations.AlterField(
            model_name='emailcollection',
            name='match_templates',
            field=models.ManyToManyField(blank=True, related_name='match_templates', to='parsers.Template', verbose_name='templates'),
        ),
        migrations.AlterField(
            model_name='emailcollection',
            name='template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='parsers.Template', verbose_name='parser executed'),
        ),
        migrations.CreateModel(
            name='PDFData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('content', models.TextField(blank=True)),
                ('page_number', models.PositiveIntegerField(null=True)),
                ('meta', django.contrib.postgres.fields.hstore.HStoreField(null=True, verbose_name='Extracted data')),
                ('pdf', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='collector.PDFCollection')),
            ],
            options={
                'verbose_name': 'pdf data',
            },
        ),
    ]
